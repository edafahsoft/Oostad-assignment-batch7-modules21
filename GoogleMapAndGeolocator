
import 'package:flutter/material.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:geolocator/geolocator.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Real-Time Location Tracker',
      home: LocationTracker(),
    );
  }
}

class LocationTracker extends StatefulWidget {
  @override
  _LocationTrackerState createState() => _LocationTrackerState();
}

class _LocationTrackerState extends State<LocationTracker> {
  late GoogleMapController mapController;
  LatLng _currentLocation = LatLng(23.7216771, 90.4165835);
  Set<Polyline> _polylines = {};
  List<LatLng> _polylineCoordinates = [];
  late Marker _currentMarker;

  @override
  void initState() {
    super.initState();
    _setInitialMarker();
    _getCurrentLocation();
  }

  void _setInitialMarker() {
    _currentMarker = Marker(
      markerId: MarkerId('currentLocation'),
      position: _currentLocation,
      infoWindow: InfoWindow(
        title: 'My Current Location',
        snippet: '${_currentLocation.latitude}, ${_currentLocation.longitude}',
      ),
    );
  }

  Future<void> _getCurrentLocation() async {
    LocationPermission permission = await Geolocator.checkPermission();
    if (permission == LocationPermission.denied ||
        permission == LocationPermission.deniedForever) {
      permission = await Geolocator.requestPermission();
    }

    if (permission == LocationPermission.whileInUse ||
        permission == LocationPermission.always) {
      Geolocator.getPositionStream(
              locationSettings:
                  LocationSettings(accuracy: LocationAccuracy.high, distanceFilter: 10))
          .listen((Position position) {
        LatLng newLocation =
            LatLng(position.latitude, position.longitude);

        setState(() {
          _currentLocation = newLocation;
          _polylineCoordinates.add(newLocation);
          _polylines.add(Polyline(
            polylineId: PolylineId('route'),
            points: _polylineCoordinates,
            color: Colors.blue,
            width: 5,
          ));

          _currentMarker = Marker(
            markerId: MarkerId('currentLocation'),
            position: newLocation,
            infoWindow: InfoWindow(
              title: 'My Current Location',
              snippet: '${newLocation.latitude}, ${newLocation.longitude}',
            ),
          );
        });

        mapController.animateCamera(CameraUpdate.newLatLng(newLocation));
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Real-Time Location Tracker'),
        backgroundColor: Colors.blueAccent,
      ),
      body: GoogleMap(
        onMapCreated: (controller) => mapController = controller,
        initialCameraPosition: CameraPosition(
          target: _currentLocation,
          zoom: 14,
        ),
        markers: {_currentMarker},
        polylines: _polylines,
        myLocationEnabled: true,
      ),
    );
  }
}
